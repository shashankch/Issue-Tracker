[{"D:\\IDEs\\progit\\Issue-Tracker\\src\\index.js":"1","D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\App.js":"2","D:\\IDEs\\progit\\Issue-Tracker\\src\\store\\index.js":"3","D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\Navbar.js":"4","D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\Home.js":"5","D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\CreateIssue.js":"6","D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\CreateProject.js":"7","D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\ProjectDetails.js":"8","D:\\IDEs\\progit\\Issue-Tracker\\src\\actions\\issues.js":"9","D:\\IDEs\\progit\\Issue-Tracker\\src\\reducers\\index.js":"10","D:\\IDEs\\progit\\Issue-Tracker\\src\\actions\\actionTypes.js":"11","D:\\IDEs\\progit\\Issue-Tracker\\src\\reducers\\issues.js":"12"},{"size":404,"mtime":1613041026896,"results":"13","hashOfConfig":"14"},{"size":1461,"mtime":1614104191854,"results":"15","hashOfConfig":"14"},{"size":939,"mtime":1613041026900,"results":"16","hashOfConfig":"14"},{"size":1353,"mtime":1614104191886,"results":"17","hashOfConfig":"14"},{"size":3214,"mtime":1614508696550,"results":"18","hashOfConfig":"14"},{"size":9402,"mtime":1614514204477,"results":"19","hashOfConfig":"14"},{"size":4803,"mtime":1614513593761,"results":"20","hashOfConfig":"14"},{"size":7095,"mtime":1614104191888,"results":"21","hashOfConfig":"14"},{"size":295,"mtime":1614509398490,"results":"22","hashOfConfig":"14"},{"size":175,"mtime":1613041026898,"results":"23","hashOfConfig":"14"},{"size":94,"mtime":1614104191849,"results":"24","hashOfConfig":"14"},{"size":934,"mtime":1614514231677,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"g0yzlh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\IDEs\\progit\\Issue-Tracker\\src\\index.js",[],["53","54"],"D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\App.js",[],"D:\\IDEs\\progit\\Issue-Tracker\\src\\store\\index.js",[],"D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\Navbar.js",["55"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { Link } from 'react-router-dom';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  links: {\r\n    color: 'white',\r\n    textDecorationLine: 'none',\r\n  },\r\n}));\r\nfunction Navbar(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge='start'\r\n            className={classes.menuButton}\r\n            color='inherit'\r\n            aria-label='menu'\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' className={classes.title}>\r\n            Issue Tracker\r\n          </Typography>\r\n          <Link to='/' className={classes.links}>\r\n            Go Back\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\Home.js",[],"D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\CreateIssue.js",["56","57"],"D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\CreateProject.js",[],"D:\\IDEs\\progit\\Issue-Tracker\\src\\components\\ProjectDetails.js",["58"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    height: 350,\r\n    width: 350,\r\n    margin: 10,\r\n  },\r\n  root2: {\r\n    flexGrow: 1,\r\n  },\r\n  addbtn: {\r\n    marginTop: 10,\r\n  },\r\n  cardsMargin: {\r\n    marginTop: 50,\r\n  },\r\n  controlsMargin: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nclass ProjectDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentProject: '',\r\n      currentIssue: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let current = this.props.projects.filter(\r\n      (proj) => proj.Id == this.props.match.params.id\r\n    );\r\n\r\n    this.setState({\r\n      currentProject: current[0],\r\n      currentIssue: current[0].Issues,\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.setState({\r\n      currentIssue: this.state.currentProject.Issues,\r\n    });\r\n  }\r\n\r\n  sortByIssue = () => {\r\n    let sorted = this.state.currentProject.Issues.sort((a, b) => {\r\n      return a.number - b.number;\r\n    });\r\n    this.setState({\r\n      currentIssue: sorted,\r\n    });\r\n  };\r\n\r\n  searchByTitleAndDesc = (value) => {\r\n    if (value.length > 0) {\r\n      let filtered = this.state.currentProject.Issues.filter((a) => {\r\n        return a.title === value || a.description === value;\r\n      });\r\n      this.setState({\r\n        currentIssue: filtered,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        currentIssue: this.state.currentProject.Issues,\r\n      });\r\n    }\r\n  };\r\n\r\n  filterByAuthor = (author) => {\r\n    if (author.length > 0) {\r\n      let filtered = this.state.currentProject.Issues.filter((a) => {\r\n        return a.author === author;\r\n      });\r\n      this.setState({\r\n        currentIssue: filtered,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        currentIssue: this.state.currentProject.Issues,\r\n      });\r\n    }\r\n  };\r\n  filterByLabels = () => {\r\n    //TODO...\r\n  };\r\n  render(props) {\r\n    console.log('Name', this.state.currentProject);\r\n    const { Id } = this.state.currentProject;\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <Grid container className={classes.root2} spacing={2}>\r\n        <Grid item xs={12}>\r\n        <Box\r\n            textAlign='center'\r\n            m={1}\r\n            fontWeight='fontWeightBold'\r\n            fontSize={26}\r\n            lineHeight={3}\r\n          >\r\n            {this.state.currentProject.Name}\r\n          </Box>\r\n          <Grid\r\n            container\r\n            justify='center'\r\n            spacing={4}\r\n            className={classes.addbtn}\r\n          >\r\n            <Link to={`/create-issue/${Id}`}>\r\n              <Fab color='primary' aria-label='add' variant='extended'>\r\n                <AddIcon /> Add Issue\r\n              </Fab>\r\n            </Link>\r\n          </Grid>\r\n\r\n          \r\n          <Box\r\n            textAlign='center'\r\n            m={1}\r\n            fontWeight='fontWeightBold'\r\n            fontSize={22}\r\n            lineHeight={4}\r\n          >\r\n            Active Issues\r\n          </Box>\r\n          <Grid\r\n            container\r\n            justify='center'\r\n            spacing={4}\r\n           \r\n          >\r\n            <Fab\r\n              color='primary'\r\n              aria-label='add'\r\n              variant='extended'\r\n              onClick={this.sortByIssue}\r\n              className={classes.controlsMargin}\r\n            >\r\n              Sort By Issue\r\n            </Fab>\r\n\r\n            <Fab\r\n              color='primary'\r\n              aria-label='add'\r\n              variant='extended'\r\n              onClick={this.filterByLabels}\r\n              className={classes.controlsMargin}\r\n            >\r\n              Filter By Label\r\n            </Fab>\r\n\r\n            <TextField\r\n              id='outlined-basic'\r\n              label='Search By Author'\r\n              variant='outlined'\r\n              type='text'\r\n              placeholder='Enter Author'\r\n              required\r\n              onChange={(e) => this.filterByAuthor(e.target.value)}\r\n              className={classes.controlsMargin}\r\n            />\r\n            <TextField\r\n              id='outlined-basic'\r\n              label='By Title and description'\r\n              variant='outlined'\r\n              type='text'\r\n              placeholder='Enter'\r\n              required\r\n              onChange={(e) => this.searchByTitleAndDesc(e.target.value)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid\r\n            container\r\n            justify='center'\r\n            spacing={4}\r\n            className={classes.cardsMargin}\r\n          >\r\n            {this.state.currentIssue &&\r\n              this.state.currentIssue.map((issue, index) => {\r\n                return (\r\n                  <Card className={classes.root} key={index}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        component='img'\r\n                        alt='Contemplative Reptile'\r\n                        height='200'\r\n                        image='https://images.unsplash.com/photo-1555066931-bf19f8fd1085?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1351&q=80https://images.unsplash.com/photo-1613929905911-96040610a54d?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=701&q=80'\r\n                        title='Contemplative Reptile'\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant='h5' component='h2'>\r\n                          {issue.title}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                          component='p'\r\n                        >\r\n                          {issue.author}\r\n                        </Typography>\r\n                        <Typography\r\n                          variant='body2'\r\n                          color='textSecondary'\r\n                          component='p'\r\n                        >\r\n                          {issue.description}\r\n                          {issue.number}\r\n\r\n                          {issue.createdAt}\r\n                          {issue.labels}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                  </Card>\r\n                );\r\n              })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(ProjectDetails);\r\n","D:\\IDEs\\progit\\Issue-Tracker\\src\\actions\\issues.js",[],"D:\\IDEs\\progit\\Issue-Tracker\\src\\reducers\\index.js",[],"D:\\IDEs\\progit\\Issue-Tracker\\src\\actions\\actionTypes.js",[],"D:\\IDEs\\progit\\Issue-Tracker\\src\\reducers\\issues.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":14},{"ruleId":"63","severity":1,"message":"67","line":50,"column":7,"nodeType":"65","messageId":"66","endLine":50,"endColumn":12},{"ruleId":"68","severity":1,"message":"69","line":88,"column":25,"nodeType":"70","messageId":"71","endLine":88,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":45,"column":25,"nodeType":"70","messageId":"71","endLine":45,"endColumn":27},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'names' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]